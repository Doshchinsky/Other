#!/bin/bash
cd
ACTIVE_W_Hyperion=(
	Main
	Extra
	SibSUTIS
	JET
	OAK
	CSC
	CYBER
	NOC
)

function create_tmux_window() {
	if [ ! $# -eq 3 ]; then
		return 1
	fi
	if [[ $3 == 1 ]]; then
		tmux new-window -a -n $2 -t $1
	fi
	if [ ! $? -eq 0 ]; then
		return 2
	fi
	case $2 in
		Main)
			;;
		Extra)
			tmux split-window -h -t $1:$2.0
			;;
		SibSUTIS)
			tmux split-window -h -t $1:$2.0
			tmux send-keys -t $1:$2.0 "cd SibSUTIS && clear" Enter
			tmux send-keys -t $1:$2.1 "cd SibSUTIS && clear" Enter
			;;
		JET)
			tmux split-window -h -t $1:$2.0
			tmux split-window -v -t $1:$2.1
			#tmux send-keys -t $1:$2.0 "jet" Enter
			tmux send-keys -t $1:$2.0 "clear" Enter
			#tmux send-keys -t $1:$2.1 "jet" Enter
			tmux send-keys -t $1:$2.1 "clear" Enter
			#tmux send-keys -t $1:$2.2 "jet" Enter
			tmux send-keys -t $1:$2.2 "clear" Enter
			;;
		OAK)
			tmux split-window -h -t $1:$2.0
			tmux split-window -v -t $1:$2.1
			tmux send-keys -t $1:$2.0 "oak" Enter
			tmux send-keys -t $1:$2.0 "clear" Enter
			tmux send-keys -t $1:$2.1 "oak" Enter
			tmux send-keys -t $1:$2.1 "clear" Enter
			tmux send-keys -t $1:$2.2 "oak" Enter
			tmux send-keys -t $1:$2.2 "clear" Enter
			;;
		CSC)
			tmux split-window -h -t $1:$2.0
			tmux split-window -v -t $1:$2.1
			tmux send-keys -t $1:$2.0 "csc" Enter
			tmux send-keys -t $1:$2.0 "clear" Enter
			tmux send-keys -t $1:$2.1 "csc" Enter
			tmux send-keys -t $1:$2.1 "clear" Enter
			tmux send-keys -t $1:$2.2 "csc" Enter
			tmux send-keys -t $1:$2.2 "clear" Enter
			;;
		CYBER)
			tmux split-window -h -t $1:$2.0
			tmux split-window -v -t $1:$2.1
			tmux send-keys -t $1:$2.0 "cyb" Enter
			tmux send-keys -t $1:$2.0 "clear" Enter
			tmux send-keys -t $1:$2.1 "cyb" Enter
			tmux send-keys -t $1:$2.1 "clear" Enter
			tmux send-keys -t $1:$2.2 "cyb" Enter
			tmux send-keys -t $1:$2.2 "clear" Enter
			;;
		NOC)
			tmux send-keys -t $1:$2.0 "noc" Enter
			tmux send-keys -t $1:$2.0 "clear" Enter
			;;
		*)
			;;
	esac
	return 0;
}

for cursor_session in $@
do
	case $cursor_session in
		Hyperion)
			tmux new-session -s $cursor_session -n ${ACTIVE_W_Hyperion[0]} -d
			if [ ! $? -eq 0 ]; then
				break
			fi
			for cursor_window in ${ACTIVE_W_Hyperion[@]}
			do
				if [[ $cursor_window == ${ACTIVE_W_Hyperion[0]} ]]; then
					create_tmux_window $cursor_session $cursor_window 0
					echo -e ["\e[1;32mCODE $?\e[0;97m"] : $cursor_window
					continue
				fi
				create_tmux_window $cursor_session $cursor_window 1
				echo -e ["\e[1;32mCODE $?\e[0;97m"] : $cursor_window
			done
			;;
	esac
	echo -e ["\e[1;32mSESSION\e[0;97m"] : $cursor_session
done
tmux select-window -t Hyperion:Main
cd -
exit 0
